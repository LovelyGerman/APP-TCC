{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { css } from \"../assets/css/Css\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as LocalAuthentication from 'expo-local-authentication';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      login = _useState8[0],\n      setLogin = _useState8[1];\n\n  useEffect(function () {\n    verifyLogin();\n  }, []);\n  useEffect(function () {\n    if (login === true) {\n      biometric();\n    }\n  }, [login]);\n\n  function verifyLogin() {\n    var response, json;\n    return _regeneratorRuntime.async(function verifyLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userData'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(JSON.parse(response));\n\n          case 5:\n            json = _context.sent;\n\n            if (json !== null) {\n              setUser(json.name);\n              setPassword(json.password);\n              setLogin(true);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function biometric() {\n    var compatible, biometricRecords, result;\n    return _regeneratorRuntime.async(function biometric$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(LocalAuthentication.hasHardwareAsync());\n\n          case 2:\n            compatible = _context2.sent;\n\n            if (!compatible) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(LocalAuthentication.isEnrolledAsync());\n\n          case 6:\n            biometricRecords = _context2.sent;\n\n            if (biometricRecords) {\n              _context2.next = 11;\n              break;\n            }\n\n            alert('Biometria não cadastrada');\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(LocalAuthentication.authenticateAsync());\n\n          case 13:\n            result = _context2.sent;\n\n            if (result.success) {\n              sendForm();\n            } else {\n              setUser(null);\n              setPassword(null);\n            }\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function sendForm() {\n    var response, json;\n    return _regeneratorRuntime.async(function sendForm$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.31:3000/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: user,\n                password: password\n              })\n            }));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context3.sent;\n\n            if (!(json === 'error')) {\n              _context3.next = 13;\n              break;\n            }\n\n            setDisplay('flex');\n            setTimeout(function () {\n              setDisplay('none');\n            }, 5000);\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 11:\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.next = 15;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(json)));\n\n          case 15:\n            navigation.navigate('AreaRestrita');\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: [css.container, css.darkbg],\n    children: [_jsx(View, {\n      style: css.login__logomarca,\n      children: _jsx(Image, {\n        source: require(\"../assets/img/logomarca.png\")\n      })\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: css.login__msg(display),\n        children: \"Usu\\xE1rio ou senha inv\\xE1lidos!\"\n      })\n    }), _jsxs(View, {\n      style: css.login__form,\n      children: [_jsx(TextInput, {\n        style: css.login__input,\n        placeholder: \"Usu\\xE1rio:\",\n        onChangeText: function onChangeText(text) {\n          return setUser(text);\n        }\n      }), _jsx(TextInput, {\n        style: css.login__input,\n        placeholder: \"Senha:\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: css.login__button,\n        onPress: function onPress() {\n          return sendForm();\n        },\n        children: _jsx(Text, {\n          style: css.login__buttonText,\n          children: \"Entrar\"\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","css","AsyncStorage","LocalAuthentication","Login","navigation","display","setDisplay","user","setUser","password","setPassword","login","setLogin","verifyLogin","biometric","getItem","response","JSON","parse","json","name","hasHardwareAsync","compatible","isEnrolledAsync","biometricRecords","alert","authenticateAsync","result","success","sendForm","fetch","method","headers","Accept","body","stringify","setTimeout","clear","setItem","navigate","container","darkbg","login__logomarca","require","login__msg","login__form","login__input","text","login__button","login__buttonText"],"sources":["C:/APP-GET/views/Login.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { KeyboardAvoidingView, TextInput, TouchableOpacity, Image, Text, View} from 'react-native';\r\nimport {css} from '../assets/css/Css';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as LocalAuthentication from 'expo-local-authentication';\r\n\r\nexport default function Login({navigation})\r\n{\r\n    const [display, setDisplay]=useState('none');\r\n    const [user, setUser]=useState(null);\r\n    const [password, setPassword]=useState(null);\r\n    const [login, setLogin]=useState(null);\r\n\r\n    useEffect(()=>{\r\n        verifyLogin();\r\n    },[]);\r\n    \r\n    useEffect(()=>{\r\n        if(login === true){\r\n            biometric();\r\n        }\r\n    },[login]);\r\n\r\n\r\n//Verifica se o usuário já possui algum login\r\nasync function verifyLogin()\r\n{\r\n    let response=await AsyncStorage.getItem('userData');\r\n    let json=await JSON.parse(response);\r\n    if(json !== null){\r\n        setUser(json.name);\r\n        setPassword(json.password);\r\n        setLogin(true);\r\n    }\r\n}\r\n\r\n//Biometria\r\nasync function biometric()\r\n{\r\n    let compatible= await LocalAuthentication.hasHardwareAsync();\r\n    if(compatible){\r\n        let biometricRecords = await LocalAuthentication.isEnrolledAsync();\r\n        if(!biometricRecords){\r\n            alert('Biometria não cadastrada');\r\n        }else{\r\n            let result=await  LocalAuthentication.authenticateAsync();\r\n            if(result.success){\r\n                sendForm();\r\n            }else{\r\n                setUser(null);\r\n                setPassword(null);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //Envio do formulário de login\r\n    async function sendForm()\r\n{\r\n    let response=await fetch('http://192.168.0.31:3000/login',{\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: user,\r\n            password: password\r\n        })\r\n    });\r\n    let json=await response.json();\r\n    if(json === 'error'){\r\n        setDisplay('flex');\r\n        setTimeout(()=>{\r\n            setDisplay('none');\r\n        },5000);\r\n        await AsyncStorage.clear();\r\n    }else{\r\n        await AsyncStorage.setItem('userData', JSON.stringify(json));\r\n        navigation.navigate('AreaRestrita');\r\n    }\r\n}\r\n\r\n    return(\r\n        <KeyboardAvoidingView style={[css.container, css.darkbg]}>\r\n            <View style={css.login__logomarca}>\r\n                <Image source={require('../assets/img/logomarca.png')} />\r\n            </View>\r\n\r\n            <View>\r\n                <Text style={css.login__msg(display)}>Usuário ou senha inválidos!</Text>\r\n            </View>\r\n\r\n            <View style={css.login__form}>\r\n                <TextInput style={css.login__input} placeholder='Usuário:' onChangeText={text=>setUser(text)} />\r\n                <TextInput style={css.login__input} placeholder='Senha:' onChangeText={text=>setPassword(text)} secureTextEntry={true} />\r\n                <TouchableOpacity style={css.login__button} onPress={()=>sendForm()}>\r\n                    <Text style={css.login__buttonText}>Entrar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}